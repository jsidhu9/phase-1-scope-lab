{
  "stats": {
    "suites": 6,
    "tests": 5,
    "passes": 2,
    "pending": 0,
    "failures": 3,
    "start": "2022-03-17T04:05:52.371Z",
    "end": "2022-03-17T04:05:52.978Z",
    "duration": 607
  },
  "tests": [
    {
      "title": "returns the customerName",
      "fullTitle": "Fix the Scope declare customerName to be bob in global scope returns the customerName",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "modifies the customerName variable",
      "fullTitle": "Fix the Scope upperCaseCustomerName() modifies the customerName variable",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: upperCaseCustomerName is not defined\n    at Context.<anonymous> (test/indexTest.js:12:7)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "upperCaseCustomerName is not defined",
        "multiple": [
          {
            "multiple": "ReferenceError: upperCaseCustomerName is not defined"
          }
        ]
      }
    },
    {
      "title": "setBestCustomer",
      "fullTitle": "Fix the Scope setBestCustomer() setBestCustomer",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'not bob' to equal undefined",
        "showDiff": true,
        "actual": "not bob",
        "stack": "AssertionError: expected 'not bob' to equal undefined\n    at Context.<anonymous> (test/indexTest.js:19:38)\n    at processImmediate (node:internal/timers:464:21)",
        "multiple": [
          {
            "name": "AssertionError",
            "message": "expected 'not bob' to equal undefined",
            "showDiff": true,
            "actual": "not bob",
            "multiple": "AssertionError: expected 'not bob' to equal undefined",
            "stack": "AssertionError: expected 'not bob' to equal undefined\n    at Context.<anonymous> (test/indexTest.js:19:38)\n    at processImmediate (node:internal/timers:464:21)"
          }
        ]
      }
    },
    {
      "title": "overwrites the best customer",
      "fullTitle": "Fix the Scope overwriteBestCustomer() overwrites the best customer",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "unsuccessfully tries to reassign the least favorite customer",
      "fullTitle": "Fix the Scope changeLeastFavoriteCustomer() unsuccessfully tries to reassign the least favorite customer",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [Function: changeLeastFavoriteCustomer] to throw an error",
        "showDiff": true,
        "expected": null,
        "stack": "AssertionError: expected [Function: changeLeastFavoriteCustomer] to throw an error\n    at Context.<anonymous> (test/indexTest.js:37:51)\n    at processImmediate (node:internal/timers:464:21)",
        "multiple": [
          {
            "name": "AssertionError",
            "message": "expected [Function: changeLeastFavoriteCustomer] to throw an error",
            "showDiff": true,
            "expected": null,
            "multiple": "AssertionError: expected [Function: changeLeastFavoriteCustomer] to throw an error",
            "stack": "AssertionError: expected [Function: changeLeastFavoriteCustomer] to throw an error\n    at Context.<anonymous> (test/indexTest.js:37:51)\n    at processImmediate (node:internal/timers:464:21)"
          }
        ]
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "modifies the customerName variable",
      "fullTitle": "Fix the Scope upperCaseCustomerName() modifies the customerName variable",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: upperCaseCustomerName is not defined\n    at Context.<anonymous> (test/indexTest.js:12:7)\n    at processImmediate (node:internal/timers:464:21)",
        "message": "upperCaseCustomerName is not defined",
        "multiple": [
          {
            "multiple": "ReferenceError: upperCaseCustomerName is not defined"
          }
        ]
      }
    },
    {
      "title": "setBestCustomer",
      "fullTitle": "Fix the Scope setBestCustomer() setBestCustomer",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'not bob' to equal undefined",
        "showDiff": true,
        "actual": "not bob",
        "stack": "AssertionError: expected 'not bob' to equal undefined\n    at Context.<anonymous> (test/indexTest.js:19:38)\n    at processImmediate (node:internal/timers:464:21)",
        "multiple": [
          {
            "name": "AssertionError",
            "message": "expected 'not bob' to equal undefined",
            "showDiff": true,
            "actual": "not bob",
            "multiple": "AssertionError: expected 'not bob' to equal undefined",
            "stack": "AssertionError: expected 'not bob' to equal undefined\n    at Context.<anonymous> (test/indexTest.js:19:38)\n    at processImmediate (node:internal/timers:464:21)"
          }
        ]
      }
    },
    {
      "title": "unsuccessfully tries to reassign the least favorite customer",
      "fullTitle": "Fix the Scope changeLeastFavoriteCustomer() unsuccessfully tries to reassign the least favorite customer",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected [Function: changeLeastFavoriteCustomer] to throw an error",
        "showDiff": true,
        "expected": null,
        "stack": "AssertionError: expected [Function: changeLeastFavoriteCustomer] to throw an error\n    at Context.<anonymous> (test/indexTest.js:37:51)\n    at processImmediate (node:internal/timers:464:21)",
        "multiple": [
          {
            "name": "AssertionError",
            "message": "expected [Function: changeLeastFavoriteCustomer] to throw an error",
            "showDiff": true,
            "expected": null,
            "multiple": "AssertionError: expected [Function: changeLeastFavoriteCustomer] to throw an error",
            "stack": "AssertionError: expected [Function: changeLeastFavoriteCustomer] to throw an error\n    at Context.<anonymous> (test/indexTest.js:37:51)\n    at processImmediate (node:internal/timers:464:21)"
          }
        ]
      }
    }
  ],
  "passes": [
    {
      "title": "returns the customerName",
      "fullTitle": "Fix the Scope declare customerName to be bob in global scope returns the customerName",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    },
    {
      "title": "overwrites the best customer",
      "fullTitle": "Fix the Scope overwriteBestCustomer() overwrites the best customer",
      "file": "/home/jsidhu9/Development/code/Phase-1/phase-1-scope-lab/test/indexTest.js",
      "duration": 1,
      "currentRetry": 0,
      "speed": "fast",
      "err": {}
    }
  ]
}